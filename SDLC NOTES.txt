DevOps with AWS
++++++++++++++++

Pre-Requisites : Nothing

Duration : 3.5 Months

Start Date : 09-Jun-2022

Class Timings : 8:00 AM - 9:15 AM (IST)

Mode : Online (Mon - Sat)

Trainer : Mr. Ashok (9+ Yrs Exp)

Course Content
++++++++++++++

1) DevOps Introduction ( What is DevOps, SDLC, Waterfall, Agile )

2) Linux with Shell Scripting

3) AWS Cloud (15+ Services)

4) DevOps Tools (10+ Tools)
			(Git Hub, Maven, Jenkins, SonarQube, Ansible, Terraform, Docker, K8S, ELK...)

5) Projects

6) Interview Preparation

+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
 DevOps Introduction
+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++

=> DevOps = Development + Operations

=> DevOps is a process which is used colloborate Development and Operational works in Software Project Development Lifecycle (SDLC)

=> DevOps is a culture 

=> By using DevOps culture we can deliver the project to client quickly with quality

++++++++++++++++++++++++++++++
Development Team (Programmers)
++++++++++++++++++++++++++++++

-> Collect Requirements
-> Analyze Requirements
-> Planning (Designing)
-> Implementation (Coding)
-> Testing
-> Code Integration

++++++++++++++++++++++++++++++++++
Operations Team(Support Engineers)
++++++++++++++++++++++++++++++++++
-> Setup machines
-> Setup Network
-> Setup Servers
-> Setup Database
-> Prepare Infrastructure for Project execution
-> Take project code from Repository (GitHub)
-> Perform Project Build (Compile)
-> Package Project (jar or war)
-> Deploy Project to Server
-> Deliver Project to Client

-> Development is doing by one team and Operations are doing by another team. There should be colloboration between Development Team and Operations team to Deliver Project to client quickly with Quality thats where DevOps culture came into market.


-> If there is no communication between Development and Operations teams then project delivery will become slow and client will loose his business.

++++++++++++++++++++++++++++++++++
Infrastructure Setup
++++++++++++++++++++++++++++++++++

-> To run a project we need to prepare environment

-> Environment means the platform which is used to run our project

-> Computers
-> Network
-> Power
-> Air Conditioner
-> Web Servers 
-> Database Servers
-> Storage
-> Security

-> Some companies will purchase and setup infrastructure that is called on On-Premises Infrastructure.

-> If we setup on-prem infrastruture then we have to purchase, setup & manage everything required for project.

-> It requires lot of money and time.

-> Instead of setting up on-prem infrastructure we can go for "Cloud Infrastructure".

-> If we go for Cloud Infrastructure we can take all the softwares for Rent then Cloud Provider will manage infastructure.

-> We just need to use infrastructure and pay money for our usage.

Note: AWS is one of the leading Cloud Provider available in the market


++++++++++++++++++++++++++++++++++
Linux
++++++++++++++++++++++++++++++++++

-> Linux is free and opensource operating system

-> In realtime, We will use Linux OS to setup Infrastructure

-> We will use Shell Scripting to automate our regular work

	(server restart, data backup, logs backup, temp files delete etc...)


=> After Learning Linux & AWS we can setup infrastructure in AWS Cloud

+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
Build & Deployment
+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++

-> Developers will develop project using one programming language

		Ex : Java, Python, C#, PHP etc....

-> Devlopers will write code using programming lanuage

-> Developers will keep code in Repository 

		Ex: SVN, GitHub, BitBucket etc...

-> DevOps engineer should take that code from Repository

-> DevOps engineer should perform Project Build and Deployment

-> Project Build means converting the project code into executable format

-> Project Deployment means keeping project exectuable file into server

-> After Deployment then Deliver project to client

		
  ********* Developers ==> Code ====> Git Hub ====> Build ====> Deploy ===> Deliver ********

-> DevOps engineer will automate project Build and Deployment

-> To automate Build & Deployments we will use Several Tools

++++++++++++++++++++++++++++++++++
DevOps Tool Chain
++++++++++++++++++++++++++++++++++

Build Tools		: Maven or Gradle
Repository		: Git Hub or BitBucket
Deployment	: Jenkins or Bamboos
Code Review	: Sonar Qube or Sonarlint
Configuration	: Chef / Puppet / Ansible
Containers		: Docker
Orachestration	: Kubernetes
App Monitoring	: New Relic
Log Monitoring	: Graphana or Promethus
Artifacts 		: Nexus / JFrog
Infrastructure  : Terraform (Infrastructure as a code)

+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
Software Development Life Cycle ( SDLC )
+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++

-> The process of implementing software project from beginning to ending is called as Software Development Life Cycle

-> Software Development Life Cycle having several phases

1) Requirements Gathering

2) Analysis

3) Design / Planning

4) Implementation / Development

5) Testing

6) Deployment

7) Deliver

8) Maintenence


-> There are several SDLC methodologies are available

1) Waterfall 
2) Agile

++++++++++++++++++++++++++++++++++
Waterfall Methodology
+++++++++++++++++++++

-> Waterfall is the first methodology that got introduced in SDLC

-> Waterfall Methodology follows Linear approach

-> In this methodology, after completing one step then only we will go for next step

-> In waterfall methodology we can't go in backward direction (only forward direction)

-> Requirements & Budget is fixed for the project

-> Client involvment is very less in the project

-> Client will see the project at the end


Note: Waterfall is recommended only for small scale applications. It is not recommended for Large Scale applications.

-> In today's world every day the requirements are changing to meet customer needs.

++++++++++++++++++++++++++++++++++
Agile methodology
++++++++++++++++++++++++++++++++++
-> Now a days, IT companies are following Agile methodology to develop and deliver the project

-> In Agile methodology Requirments are not fixed and Budget is also not fixed

Note: In Agile methodology, Client can change requirement at any point of time.

-> Agile is an "Iterative" approach to develop and deliver the project to client

-> In Agile methodology Development & Testing will happen paralelly

-> In Agile Methodology, Project requirements will be divided into multiple releases 
   (these are called as Sprints)

a) Sprint Planning
b) Sprint
c) Scrum
d) Retrospective

-> Sprint Planning is a meeting in which we will identify the priority requirements to deliver

-> Sprint means fixed set of requirements that are finalized for delivery with in timeline

Note: Every sprint will have duration (2 weeks)

-> Scrum means daily status call to update our work status

	(Scrum / Standup / Status)

Note: In scrum call we will discuss what we have done for today

-> Retrospective is a meeting which will be conducted after sprint completion.
				
						 - What we have done in this sprint
						 - Achievements
						 - Lessons Learnt
						 - Improve Areas
						 - New Ideas

-> One Scrum Master will be available to manage our scrum team.
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

































































